<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<beans:import resource="scheduler-context.xml"/>	

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.spring.odagada" />
	
		<!-- 웹 소켓핸들러 -->
        <websocket:handlers>
               <websocket:mapping handler="echoHandler" path="/echo"/>
               <!-- WebSocket Handshake : 웹소켓 핸들러 클래스(echoHandler)가 호출되기전에 HttpSession에 접속하여  -->
               <!-- '이용자 아이디를 추출하는 기능' 등을 인터셉터가 수행하도록 설정 -->
               <websocket:handshake-interceptors>
                       <beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
               </websocket:handshake-interceptors>
               <!-- SockJS를 사용하기 위해 설정 -->
               <websocket:sockjs />
        </websocket:handlers>
        <beans:bean id="echoHandler" class="com.spring.odagada.community.util.EchoHandler" />
	
		<!-- 파일업로드 객체 설정 -->
		<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
			<beans:property name="maxUploadSize" value="10485760"/><!-- 10mb -->
		</beans:bean>
		
		<!-- JSON처리를 위한 jsonview를 등록 -->
		<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
			<beans:property name="order" value="1"/>
		</beans:bean>
		<beans:bean id="jsonView" class="net.sf.json.spring.web.servlet.view.JsonView"/>
		
		<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
			<beans:property name="messageConverters"><!--자료를 여러개 넣을 수 있다.  -->
				<beans:list>
					<beans:bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
				</beans:list>
			</beans:property>
		</beans:bean>
	
</beans:beans>
