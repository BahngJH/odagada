<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="member">
	<resultMap id="memberMap" type="map"/>
	<!--로그인  -->
	<select id="login" parameterType="map" resultMap="memberMap">
		SELECT*FROM MEMBER WHERE MEMBERID=#{memberId}	
	</select>
	
	<!--멤버 정보 갖고오기  -->
	<select id="selectMember" parameterType="string" resultType="member">
		SELECT*FROM MEMBER WHERE MEMBERID=#{memberId}
	</select>
	
	<!--회원 등록 -->
	<insert id="insertMember" parameterType="member">
	INSERT INTO MEMBER VALUES(SEQ_MEMBER.NEXTVAL, #{memberId}, #{memberPw}, #{memberName}, #{birth}, #{phone}, #{email},  sysdate, #{gender}, default, #{profileImageOri}, #{profileImageRe}, default, default, default, default)
	</insert>
	
	<!--메일 인증 코드 생성 -->
	<update id="updateCode" parameterType="member">
	UPDATE MEMBER SET MAILCODE=#{mailCode} where email=#{email}
	</update>
	
 	<!-- 메일 인증상태 업데이트 -->	
	<update id="mailStatus" parameterType="map">
	UPDATE MEMBER SET ISEMAILAUTH = #{isEmailAuth}, EMAIL=#{email} where memberId=#{memberId}
	</update>
	
	<!--ID중복 체크 -->
	<select id="checkId" parameterType="string" resultType="_int">
	SELECT COUNT(*) FROM MEMBER WHERE MEMBERID=#{memberId}
	</select>
	
	<!--Email중복 체크  -->
	<select id="checkEmail" parameterType="string" resultType="_int">
	SELECT COUNT(*) FROM MEMBER WHERE EMAIL=#{email}
	</select>
	
	<!--핸드폰 중복 체크  -->
	<select id="checkPhone" parameterType="string" resultType="_int">
	SELECT COUNT(*) FROM MEMBER WHERE PHONE=#{phone}
	</select>
 	
 <!-- 회원 정보 수정  -->
	<update id="updateMember" parameterType="member">
	UPDATE MEMBER SET memberPw=#{memberPw},
	                        phone=#{phone},
	                        email=#{email},
	                        #{profileImageOri},
	                        #{profileImageRe},
	                        #{isPhoneAuth},
	                        #{isEmailAuth}
	                        where memberNum=#{memberNum}                      
	</update> 
	
	<!-- 회원삭제  -->
	<delete id="memberDelete" parameterType="int">
	DELETE FROM MEMBER WHERE MEMBERNUM=#{memberNum} 	
	</delete> 
	
	<!-- 아이디 찾기  -->
	<select id="findId" parameterType="map" resultMap="memberMap">
	SELECT MEMBERID FROM MEMBER WHERE MEMBERNAME=#{memberName} AND EMAIL=#{email}	
	</select>
	
	<!--패스워드 찾기 -->
	<select id="findPw" parameterType="map" resultMap="memberMap">
	SELECT MEMBERPW FROM MEMBER WHERE MEMBERID=#{memberId} AND EMAIL=#{email} AND  MEMBERNAME=#{memberName} 
	</select>
	
	<!--임시 비밀번호로 업데이트 -->
	<update id="tempPassword" parameterType="map">
	UPDATE MEMBER SET MEMBERPW=#{memberPw} WHERE MEMBERID=#{memberId}
	</update>
	
	<update id="updatePhoneCode" parameterType="member">
		UPDATE MEMBER SET PHONECODE = #{phoneCode} WHERE MEMBERNUM = #{memberNum}
	</update>
	
	<select id="selectPhoneCode" parameterType="_int" resultType="string">
		SELECT PHONECODE FROM MEMBER WHERE MEMBERNUM = #{memberNum}
	</select>
	
	<update id="updateYPhoneStatus" parameterType="_int">
		UPDATE MEMBER SET ISPHONEAUTH = 'Y' WHERE MEMBERNUM=#{memberNum}
	</update>
	<!--비밀번호 변경  -->
	<update id="updatePassword" parameterType="member">
	UPDATE MEMBER SET MEMBERPW=#{memberPw} WHERE MEMBERID=#{memberId}
	</update>
	<!--메일 코드 변경 -->
	<update id="updateMailCode" parameterType="member">
	 UPDATE MEMBER SET MAILCODE=#{mailCode} WHERE MEMBERID=#{memberId}
	 </update>
	 <!--핸드폰 번호 변경  -->
	 <update id="updatePhone" parameterType="member">
	 UPDATE MEMBER SET ISPHONEAUTH=#{isPhoneAuth}, PHONE=#{phone} WHERE MEMBERNUM=#{memberNum}
	 </update>
	 <!--이름 변경  -->
	 <update id="updateName" parameterType="member">
	 UPDATE MEMBER SET MEMBERNAME=#{memberName} WHERE MEMBERNUM=#{memberNum}
	 </update>
</mapper>
