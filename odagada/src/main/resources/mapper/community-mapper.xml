<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="community">

  <select id="searchId" parameterType="string" resultType="map">
  	select * from member where memberid like '%' || #{searchId} || '%'
  </select>

  <insert id="insertRoomId">
  	insert into chattingroom values(#{myId},#{chatUser},#{roomId})
  </insert>
  <insert id="insertRoomId2">
  	insert into chattingroom values(#{chatUser},#{myId},#{roomId})
  </insert>

  <select id="bringUserInfo" parameterType="map" resultType="map">
  	select roomid,membername,memberid,PROFILEIMAGERE from member join(chattingroom) on(member2=memberid) where member1=#{myId} and member2=#{chatUser}
  </select>

  <select id="roomIdCheck" parameterType="map" resultType="string">
  	select roomid from chattingroom where member1=#{myId} and member2=#{chatUser}
  </select>

  <select id="jsutCheckMsg" parameterType="string" resultType="int">
	select count(*) from chattingview where receiver=#{myId} and isread='N'
  </select>
  
  <insert id="saveMessage" parameterType="msgVo">
  	insert into chattingview values(#{receiver},#{sender},sysdate,#{cContent},#{roomId},'N')
  </insert>
  
  <select id="bringMsg" parameterType="string" resultType="map">
  	select sender,receiver,roomid,ccontent,memberid,membername,profileimagere,profileimageori from chattingView join member on (sender=memberid) where roomId=#{roomId} order by cDate
  </select>
  
  
  <select id="bringChatRooms" parameterType="string" resultType="com.spring.odagada.community.model.vo.ChatRoomVo">
	select roomid,member1 as receiver,memberid,membername,TO_CHAR(cDate+9/24,'yy.MM.dd HH24:mi:ss') as cDate,ccontent,profileimagere from chattingroom join member on(member2=memberid) join chattingview using(roomid) where cdate in (select max(cdate) from chattingroom join chattingview using(roomid) where member1=#{loginId} group by roomid) and member1=#{loginId} order by cdate desc
  </select>
  
  <select id="isReadCount" parameterType="com.spring.odagada.community.model.vo.ChatRoomVo" resultType="int">
  	select count(*) from chattingview where receiver=#{receiver} and roomid=#{roomId} and isread='N'
  </select>
  
  <update id="checkedMessage" parameterType="map">
  	update chattingview set isread='Y' where isread='N' and receiver=#{loginId} and roomid=#{roomId}
  </update>

  <insert id="insertNotify" parameterType="map">
  	INSERT INTO NOTIFY VALUES(#{memberNum},19,#{nContent},sysdate)
  </insert>
  <insert id="insertReview" parameterType="map">
  	INSERT INTO REVIEW VALUES(#{memberNum},19,20,#{rContent},sysdate,#{rGrade})
  </insert>
  <select id="selectReview" resultType="map" parameterType="_int">
	SELECT * FROM REVIEW WHERE CARPOOLNUM=#{carpoolNum}  
  </select>
  <select id="selectMyReviewList" resultType="map">
  	SELECT * FROM REVIEW WHERE WRITERNUM=#{memberNum} order by rDate desc
  </select>
  <select id="selectReviewList" resultType="map">
  	SELECT * FROM REVIEW WHERE DRIVERNUM=#{memberNum} order by rDate desc
  </select>
  <update id="updateReview">
 	UPDATE REVIEW SET WRITERNUM=#{memberNum},19,RCONTENT=#{rContent},sysdate,RGRADE=#{rGarde} WHERE CARPOOLNUM=#{carpoolNum}
  </update>
  <delete id="deleteReview">
  	DELETE FROM REVIEW WHERE CARPOOLNUM=#{carpoolNum}
  </delete>
  

</mapper>
